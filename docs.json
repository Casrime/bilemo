{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "description": "",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "\/",
      "description": ""
    }
  ],
  "paths": {
    "\/api\/clients": {
      "get": {
        "operationId": "getClientCollection",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client collection",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Client.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Client"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Client"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Client resources.",
        "description": "Retrieves the collection of Client resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postClientCollection",
        "tags": [
          "Client"
        ],
        "responses": {
          "201": {
            "description": "Client resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/api\/clients\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Client resource.",
        "description": "Creates a Client resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Client resource",
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client.jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/clients\/{id}": {
      "get": {
        "operationId": "getClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Client resource.",
        "description": "Retrieves a Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/api\/clients\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Client resource.",
        "description": "Replaces the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client.jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Client resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Client resource.",
        "description": "Removes the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/api\/clients\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Client resource.",
        "description": "Updates the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application\/merge-patch+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/login_check": {
      "post": {
        "operationId": "login_check_post",
        "tags": [
          "Login Check"
        ],
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "readOnly": true,
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          }
        },
        "summary": "Creates a user token.",
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "The login data",
          "content": {
            "application\/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "nullable": false
                  },
                  "password": {
                    "type": "string",
                    "nullable": false
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/phones": {
      "get": {
        "operationId": "getPhoneCollection",
        "tags": [
          "Phone"
        ],
        "responses": {
          "200": {
            "description": "Phone collection",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Phone.jsonld-list"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Phone-list"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Phone-list"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Phone resources.",
        "description": "Retrieves the collection of Phone resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/phones\/{id}": {
      "get": {
        "operationId": "getPhoneItem",
        "tags": [
          "Phone"
        ],
        "responses": {
          "200": {
            "description": "Phone resource",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Phone.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Phone"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Phone"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Phone resource.",
        "description": "Retrieves a Phone resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/users": {
      "get": {
        "operationId": "getUserCollection",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/User.jsonld-list"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/User-list"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/User-list"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postUserCollection",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User"
                }
              }
            },
            "links": {
              "GetUserItem": {
                "operationId": "getUserItem",
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/api\/users\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User.jsonld-add"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User-add"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/User-add"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "\/api\/users\/{id}": {
      "get": {
        "operationId": "getUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User.jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "User resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the User resource.",
        "description": "Removes the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "The public representation of the user (e.g. a username, an email address, etc.).",
            "type": "string"
          },
          "salt": {
            "readOnly": true,
            "description": "Returning a salt is only needed, if you are not using a modern\nhashing algorithm (e.g. bcrypt or sodium) in your security.yaml.",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "username"
        ]
      },
      "Client-list": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "Client.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http:\/\/www.w3.org\/ns\/hydra\/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "The public representation of the user (e.g. a username, an email address, etc.).",
            "type": "string"
          },
          "salt": {
            "readOnly": true,
            "description": "Returning a salt is only needed, if you are not using a modern\nhashing algorithm (e.g. bcrypt or sodium) in your security.yaml.",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "username"
        ]
      },
      "Client.jsonld-list": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http:\/\/www.w3.org\/ns\/hydra\/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "Phone": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Phone-list": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "Phone.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http:\/\/www.w3.org\/ns\/hydra\/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Phone.jsonld-list": {
        "type": "object",
        "description": "",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "birthdayDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "client": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        },
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ]
      },
      "User-add": {
        "type": "object",
        "description": "",
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ],
        "properties": {
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "User-list": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Client-list"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ]
      },
      "User.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http:\/\/www.w3.org\/ns\/hydra\/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "birthdayDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "client": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        },
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ]
      },
      "User.jsonld-add": {
        "type": "object",
        "description": "",
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http:\/\/www.w3.org\/ns\/hydra\/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "User.jsonld-list": {
        "type": "object",
        "description": "",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "lastname": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "pseudo": {
            "minLength": 2,
            "maxLength": 30,
            "type": "string"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Client.jsonld-list"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "firstname",
          "lastname",
          "pseudo"
        ]
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "Value for the Authorization header parameter.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": []
}
